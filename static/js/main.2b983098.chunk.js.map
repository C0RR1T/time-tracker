{"version":3,"sources":["AppNavbar.tsx","login/Login.tsx","login/SignUp.tsx","mainsite/SelectTaskPopUp.tsx","mainsite/TimeTracker.tsx","mainsite/ManageTasks.tsx","mainsite/Statistics.tsx","App.tsx","index.tsx"],"names":["AppNavbar","useState","user","setUser","history","useHistory","useEffect","firebase","app","auth","onAuthStateChanged","Navbar","expand","Brand","Toggle","aria-controls","Collapse","Nav","className","Link","to","style","textDecoration","Button","variant","onClick","signOut","then","push","validationScheme","Yup","shape","email","required","password","Login","error","setError","formik","useFormik","validateOnChange","validateOnBlur","validationSchema","initialValues","onSubmit","signInWithEmailAndPassword","catch","errorHandling","err","console","log","code","Container","ModalTitle","Form","e","preventDefault","handleSubmit","Row","FormGroup","FormLabel","FormControl","type","name","isInvalid","errors","placeholder","onChange","handleChange","Alert","show","ModalFooter","min","confirmPassword","oneOf","SignUp","a","createUserWithEmailAndPassword","firestore","collection","doc","uid","set","activities","tasks","fastTasks","Col","SelectTaskPopUp","onSelect","onClose","allowUndefined","selectedTask","setSelectedTask","currentUser","onSnapshot","snapshot","data","Modal","Header","Title","Body","Dropdown","task","undefined","Menu","map","val","Item","eventKey","Footer","MINUTES_IN_MS","HOURS_IN_MS","getLastPause","lastPause","length","pauses","formatTime","time","formatString","Math","floor","slice","TimeTracker","setTime","currentTask","setCurrentTask","showPopUp","setShowPopUp","intervalState","setIntervalState","timeWasted","filter","finished","reduce","b","start","clearInterval","isPause","setInterval","Date","now","startTask","update","startPause","currentActivity","disabled","ListGroup","action","ManageTasks","setTasks","setFastTasks","arr","get","Table","bordered","Check","checked","includes","bool","v","changeFastTasks","target","value","values","getFilterLength","day","setHours","month","setMonth","getMonth","year","setFullYear","getFullYear","allTime","week","getMonday","getTime","d","getDay","diff","getDate","setDate","format","getFilterFormatted","Statistics","setFilter","setActivities","newUser","inTimeFrame","act","pause","acc","apps","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","App","setCurrentUser","fluid","Switch","path","component","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b983098.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Nav, Navbar } from 'react-bootstrap';\nimport firebase from 'firebase/compat';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst AppNavbar = () => {\n    const [user, setUser] = useState<firebase.User | null>();\n    const history = useHistory();\n\n    useEffect(() => {\n        firebase.app().auth().onAuthStateChanged(setUser);\n    }, []);\n\n    return (\n        <Navbar expand={'lg'}>\n            <Navbar.Brand>Time Tracker</Navbar.Brand>\n            <Navbar.Toggle aria-controls='responsive-navbar-nav' />\n            <Navbar.Collapse>\n                <Nav className={'me-auto'}>\n                    {user ? (\n                        <>\n                            <Nav.Link>\n                                <Link\n                                    to={'/'}\n                                    style={{ textDecoration: 'none' }}\n                                    className={'nav-link'}>\n                                    Zeit tracken\n                                </Link>\n                            </Nav.Link>\n                            <Nav.Link>\n                                <Link to={'/tasks'} className={'nav-link'}>\n                                    Aktivitäten bearbeiten\n                                </Link>\n                            </Nav.Link>\n                            <Nav.Link>\n                                <Link to={'/stats'} className={'nav-link'}>\n                                    Statistiken\n                                </Link>\n                            </Nav.Link>\n                        </>\n                    ) : (\n                        <>\n                            <Nav.Link>Login</Nav.Link>\n                        </>\n                    )}\n                </Nav>\n                <Nav>\n                    {user && (\n                        <Nav.Link>\n                            <Button\n                                variant={'outline-primary'}\n                                onClick={() =>\n                                    firebase\n                                        .app()\n                                        .auth()\n                                        .signOut()\n                                        .then(\n                                            () => history && history.push('/')\n                                        )\n                                }>\n                                Ausloggen\n                            </Button>\n                        </Nav.Link>\n                    )}\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n};\n\nexport default AppNavbar;\n","import React, { useState } from 'react';\nimport {\n    Alert,\n    Button,\n    Container,\n    Form,\n    FormControl,\n    FormGroup,\n    FormLabel,\n    ModalFooter,\n    ModalTitle,\n    Row,\n} from 'react-bootstrap';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport firebase from 'firebase/compat';\nimport { Link, useHistory } from 'react-router-dom';\n\nconst validationScheme = Yup.object().shape({\n    email: Yup.string()\n        .email('Die E-Mail muss gültig sein')\n        .required('Das E-Mail Feld darf nicht leer sein'),\n    password: Yup.string(),\n});\n\nconst Login = () => {\n    const history = useHistory();\n\n    const onSubmit = ({\n        email,\n        password,\n    }: {\n        email: string;\n        password: string;\n    }) => {\n        firebase\n            .app()\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .then(() => history.push('/'))\n            .catch(errorHandling);\n    };\n    const [error, setError] = useState({\n        email: '',\n        password: '',\n    });\n\n    const formik = useFormik({\n        validateOnChange: false,\n        validateOnBlur: true,\n        validationSchema: validationScheme,\n        initialValues: {\n            email: '',\n            password: '',\n        },\n        onSubmit,\n    });\n\n    const errorHandling = (err: any) => {\n        console.log(err.code);\n        switch (err.code) {\n            case 'auth/invalid-email':\n                setError({\n                    ...error,\n                    email: 'Die eingegebene Email ist nicht valid',\n                });\n                break;\n            case 'auth/user-not-found':\n                setError({\n                    ...error,\n                    email: 'Dieses Konto existiert nicht',\n                });\n                break;\n            case 'auth/wrong-password':\n                setError({\n                    ...error,\n                    password: 'Das eingegebene Passwort ist nicht korrekt',\n                });\n        }\n    };\n    return (\n        <Container>\n            <ModalTitle>Login</ModalTitle>\n            <br />\n            <Form\n                onSubmit={e => {\n                    e.preventDefault();\n                    formik.handleSubmit();\n                }}>\n                <Row>\n                    <FormGroup>\n                        <FormLabel>E-Mail Adresse</FormLabel>\n                        <FormControl\n                            type={'email'}\n                            name={'email'}\n                            isInvalid={!!formik.errors.email || !!error.email}\n                            placeholder={'Email Adresse'}\n                            onChange={formik.handleChange}\n                        />\n                        <Alert\n                            variant={'danger'}\n                            show={!!formik.errors.email || !!error.email}>\n                            {formik.errors.email || error.email}\n                        </Alert>\n                    </FormGroup>\n                </Row>\n                <Row>\n                    <FormGroup>\n                        <FormLabel>Passwort</FormLabel>\n                        <FormControl\n                            type={'password'}\n                            name={'password'}\n                            isInvalid={\n                                !!formik.errors.password || !!error.password\n                            }\n                            placeholder={'Passwort'}\n                            onChange={formik.handleChange}\n                        />\n                        <Alert\n                            variant={'danger'}\n                            show={!!formik.errors.password || !!error.password}>\n                            {formik.errors.password || error.password}\n                        </Alert>\n                    </FormGroup>\n                </Row>\n                <br />\n                <Button type={'submit'}>Einloggen</Button>\n                <br />\n                <br />\n                <ModalFooter>\n                    Noch kein Account?{' '}\n                    <Link to={'/signup'}>Hier registrieren</Link>\n                </ModalFooter>\n            </Form>\n        </Container>\n    );\n};\n\nexport default Login;\n","import React from 'react';\nimport {\n    Button,\n    Col,\n    Container,\n    Form,\n    FormControl,\n    FormGroup,\n    FormLabel,\n    ModalTitle,\n    Row,\n} from 'react-bootstrap';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport firebase from 'firebase/compat';\nimport { useHistory } from 'react-router-dom';\n\nconst validationSchema = Yup.object().shape({\n    email: Yup.string().required('Das Email Feld darf nicht leer sein').email(),\n    password: Yup.string()\n        .required('Das Passwort Feld darf nicht leer sein')\n        .min(6, 'Das Passwort muss mindestens 6 Zeichen enthalten'),\n    confirmPassword: Yup.string().oneOf(\n        [Yup.ref('password')],\n        'Die Passwörter stimmen nicht überein'\n    ),\n});\n\nconst SignUp = () => {\n    const history = useHistory();\n\n    const handleSubmit = async ({\n        email,\n        password,\n    }: {\n        email: string;\n        password: string;\n    }) => {\n        const { user } = await firebase\n            .app()\n            .auth()\n            .createUserWithEmailAndPassword(email, password);\n        if (user) {\n            await firebase.firestore().collection('users').doc(user.uid).set({\n                activities: [],\n                tasks: [],\n                fastTasks: [],\n            });\n            firebase\n                .app()\n                .auth()\n                .signInWithEmailAndPassword(email, password)\n                .then(() => history.push(''));\n        }\n    };\n\n    const formik = useFormik({\n        initialValues: {\n            password: '',\n            confirmPassword: '',\n            email: '',\n        },\n        validateOnBlur: false,\n        validateOnChange: true,\n        validationSchema,\n        onSubmit: handleSubmit,\n    });\n\n    return (\n        <Container>\n            <ModalTitle>Konto erstellen</ModalTitle>\n            <Form\n                onSubmit={e => {\n                    e.preventDefault();\n                    formik.handleSubmit(e);\n                }}>\n                <Row>\n                    <FormGroup>\n                        <FormLabel>Email Adresse</FormLabel>\n                        <FormControl\n                            type={'email'}\n                            name={'email'}\n                            placeholder={'Email Adresse'}\n                            onChange={formik.handleChange}\n                        />\n                    </FormGroup>\n                </Row>\n                <Row>\n                    <Col>\n                        <FormGroup>\n                            <FormLabel>Passwort</FormLabel>\n                            <FormControl\n                                type={'password'}\n                                name={'password'}\n                                placeholder={'Passwort'}\n                                onChange={formik.handleChange}\n                            />\n                        </FormGroup>\n                    </Col>\n                    <Col>\n                        <FormGroup>\n                            <FormLabel>Passwort bestätigen</FormLabel>\n                            <FormControl\n                                type={'password'}\n                                name={'confirmPassword'}\n                                placeholder={'Passwort bestätigen'}\n                                onChange={formik.handleChange}\n                            />\n                        </FormGroup>\n                    </Col>\n                </Row>\n                <br />\n                <Button type={'submit'}>Konto erstellen</Button>\n            </Form>\n        </Container>\n    );\n};\n\nexport default SignUp;\n","import React, { useEffect, useState } from 'react';\nimport { Button, Dropdown, Modal } from 'react-bootstrap';\nimport firebase from 'firebase/compat';\nimport User from '../User';\n\ntype Props = {\n    onSelect: (task?: string) => void;\n    onClose: () => void;\n    show: boolean;\n    allowUndefined: boolean;\n};\n\nconst SelectTaskPopUp = ({\n    onSelect,\n    onClose,\n    show,\n    allowUndefined = false,\n}: Props) => {\n    const [user, setUser] = useState<User>();\n    const [selectedTask, setSelectedTask] = useState<string>();\n\n    useEffect(\n        () =>\n            firebase\n                .app()\n                .firestore()\n                .collection('users')\n                .doc(firebase.app().auth().currentUser!.uid)\n                .onSnapshot(snapshot => setUser(snapshot.data() as User)),\n        []\n    );\n\n    const handleSubmit = () => {\n        if (selectedTask || allowUndefined) {\n            onSelect(selectedTask);\n            onClose();\n        }\n    };\n\n    return (\n        <Modal show={show}>\n            <Modal.Header>\n                <Modal.Title>Aktivität starten</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <Dropdown onSelect={task => setSelectedTask(task || undefined)}>\n                    <Dropdown.Toggle>Aktivität aussuchen</Dropdown.Toggle>\n                    <Dropdown.Menu>\n                        {user?.tasks.map(val => (\n                            <Dropdown.Item key={val} eventKey={val}>\n                                {val}\n                            </Dropdown.Item>\n                        ))}\n                    </Dropdown.Menu>\n                </Dropdown>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant={'danger'} onClick={onClose}>\n                    Abbrechen\n                </Button>\n                <Button variant={'success'} onClick={handleSubmit}>\n                    Aktivität starten\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default SelectTaskPopUp;\n","import React, { useEffect, useState } from 'react';\nimport {\n    Button,\n    Col,\n    Container,\n    ListGroup,\n    ModalTitle,\n    Row,\n} from 'react-bootstrap';\nimport User, { Activity } from '../User';\nimport firebase from 'firebase/compat';\nimport SelectTaskPopUp from './SelectTaskPopUp';\n\nconst TimeTracker = () => {\n    const [time, setTime] = useState('00:00:00');\n    const [user, setUser] = useState<User>();\n    const [currentTask, setCurrentTask] = useState<{\n        name?: string;\n        isPause: boolean;\n    }>();\n    const [showPopUp, setShowPopUp] = useState(false);\n\n    const [intervalState, setIntervalState] = useState<NodeJS.Timeout>();\n\n    useEffect(() => {\n        firebase\n            .app()\n            .firestore()\n            .collection('users')\n            .doc(firebase.app().auth().currentUser!.uid)\n            .onSnapshot(snapshot => setUser(snapshot.data() as User));\n    }, []);\n\n    useEffect(() => {\n        const currentTask = user?.activities[user?.activities.length - 1];\n        if (currentTask) {\n            const timeWasted = currentTask.pauses\n                .filter(a => a.finished)\n                .reduce((a, b) => a + (b.finished! - b.start), 0);\n            const lastPause = getLastPause(user);\n            if (!!currentTask.finished && !!currentTask.start) {\n                setTime('00:00:00');\n                clearInterval(intervalState!);\n                setCurrentTask(undefined);\n                setIntervalState(undefined);\n            } else if (lastPause?.finished) {\n                clearInterval(intervalState!);\n                setIntervalState(undefined);\n                setCurrentTask({\n                    isPause: false,\n                    name: currentTask.task,\n                });\n                setIntervalState(\n                    setInterval(\n                        () =>\n                            setTime(\n                                formatTime(\n                                    Date.now() - currentTask.start - timeWasted\n                                )\n                            ),\n                        1000\n                    )\n                );\n            } else if (!lastPause?.finished && lastPause?.start) {\n                clearInterval(intervalState!);\n                setTime('00:00:00');\n                setCurrentTask({\n                    isPause: true,\n                    name: lastPause?.task,\n                });\n                setIntervalState(\n                    setInterval(\n                        () => setTime(formatTime(Date.now() - lastPause.start)),\n                        1000\n                    )\n                );\n            } else if (!currentTask.finished && currentTask.start) {\n                clearInterval(intervalState!);\n                setTime('00:00:00');\n                setIntervalState(\n                    setInterval(\n                        () =>\n                            setTime(\n                                formatTime(\n                                    Date.now() - currentTask.start - timeWasted\n                                )\n                            ),\n                        1000\n                    )\n                );\n                setCurrentTask({\n                    isPause: false,\n                    name: currentTask.task,\n                });\n            }\n        }\n    }, [user?.activities[user?.activities.length - 1]]);\n\n    const startTask = (task?: string) => {\n        if (task) {\n            firebase\n                .firestore()\n                .collection('users')\n                .doc(firebase.auth().currentUser!.uid)\n                .update({\n                    activities: [\n                        ...user!.activities,\n                        {\n                            start: Date.now(),\n                            task,\n                            pauses: [],\n                        },\n                    ],\n                });\n        }\n    };\n\n    const stopTask = () => {\n        const currentActivity = user!.activities[user!.activities.length - 1];\n        if (currentTask!.isPause) {\n            firebase\n                .firestore()\n                .collection('users')\n                .doc(firebase.auth().currentUser!.uid)\n                .update({\n                    activities: [\n                        ...(user!.activities.length > 1\n                            ? user!.activities.slice(-1)\n                            : []),\n                        {\n                            ...currentActivity,\n                            pauses: [\n                                ...(currentActivity.pauses.length > 1\n                                    ? currentActivity.pauses.slice(-1)\n                                    : []),\n                                {\n                                    ...getLastPause(user!),\n                                    finished: Date.now(),\n                                },\n                            ],\n                        },\n                    ],\n                });\n        } else {\n            firebase\n                .firestore()\n                .collection('users')\n                .doc(firebase.auth().currentUser!.uid)\n                .update({\n                    activities: [\n                        ...(user!.activities.length > 1\n                            ? user!.activities.slice(-1)\n                            : []),\n                        {\n                            ...currentActivity,\n                            finished: Date.now(),\n                        },\n                    ],\n                });\n        }\n    };\n\n    const startPause = (task?: string) => {\n        const currentActivity = user!.activities[user!.activities.length - 1];\n\n        firebase\n            .firestore()\n            .collection('users')\n            .doc(firebase.auth().currentUser!.uid)\n            .update({\n                activities: [\n                    ...(user!.activities.length > 1\n                        ? user!.activities.slice(-1)\n                        : []),\n                    {\n                        ...currentActivity,\n                        pauses: [\n                            ...currentActivity.pauses,\n                            {\n                                start: Date.now(),\n                                ...(task ? { task } : {}),\n                            },\n                        ],\n                    },\n                ],\n            });\n    };\n\n    return (\n        <Container>\n            <SelectTaskPopUp\n                allowUndefined={!!currentTask}\n                onSelect={currentTask ? startPause : startTask}\n                onClose={() => setShowPopUp(false)}\n                show={showPopUp}\n            />\n            <ModalTitle>Zeit tracken</ModalTitle>\n            <Row>\n                <Col>\n                    <Row>\n                        <h1>{time}</h1>\n                    </Row>\n                    {!!currentTask && (\n                        <Row>\n                            <p>Aktueller Task: {currentTask.name || 'Pause'}</p>\n                        </Row>\n                    )}\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <Button\n                        variant={'success'}\n                        onClick={() => setShowPopUp(true)}\n                        disabled={!!currentTask}>\n                        Starten\n                    </Button>\n                </Col>\n                <Col>\n                    <Button\n                        variant={'secondary'}\n                        disabled={!currentTask || currentTask?.isPause}\n                        onClick={() => setShowPopUp(true)}>\n                        Pause\n                    </Button>\n                </Col>\n                <Col>\n                    <Button\n                        variant={'danger'}\n                        disabled={!currentTask}\n                        onClick={stopTask}>\n                        {currentTask?.isPause ? 'Pause beenden' : 'Beenden'}\n                    </Button>\n                </Col>\n            </Row>\n            <br />\n            <h1>Schnell-Start</h1>\n            <Row>\n                <ListGroup>\n                    {user?.fastTasks.map(val => (\n                        <ListGroup.Item\n                            disabled={currentTask?.name === val}\n                            action\n                            onClick={() =>\n                                currentTask ? startPause(val) : startTask(val)\n                            }\n                            key={val}>\n                            {val}\n                        </ListGroup.Item>\n                    ))}\n                </ListGroup>\n            </Row>\n        </Container>\n    );\n};\n\nconst SECONDS_IN_MS = 1000;\nconst MINUTES_IN_MS = 60 * SECONDS_IN_MS;\nconst HOURS_IN_MS = 60 * MINUTES_IN_MS;\n\nconst getLastPause = (user?: User): Activity | undefined => {\n    const lastPause =\n        user?.activities[user.activities.length - 1]?.pauses[\n            user?.activities[user.activities.length - 1]?.pauses.length - 1\n        ];\n    if (lastPause) {\n        return lastPause;\n    }\n};\n\nconst formatTime = (time: number) =>\n    `${formatString(Math.floor(time / HOURS_IN_MS))}:${formatString(\n        Math.floor((time % HOURS_IN_MS) / MINUTES_IN_MS)\n    )}:${formatString(Math.floor((time % MINUTES_IN_MS) / SECONDS_IN_MS))}`;\n\nconst formatString = (time: number) => `0${time}`.slice(-2);\n\nexport default TimeTracker;\n","import React, { useEffect, useState } from 'react';\nimport {\n    Alert,\n    Button,\n    Container,\n    Form,\n    FormControl,\n    FormGroup,\n    ModalTitle,\n    Table,\n} from 'react-bootstrap';\nimport firebase from 'firebase/compat';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nconst validationSchema = Yup.object().shape({\n    task: Yup.string().required('Das Feld ist erforderlich'),\n});\n\nconst ManageTasks = () => {\n    const [tasks, setTasks] = useState<Array<string>>([]);\n    const [fastTasks, setFastTasks] = useState<Array<string>>([]);\n\n    const onSubmit = ({ task }: { task: string }) => {\n        const arr = [...tasks, task];\n        firebase\n            .app()\n            .firestore()\n            .collection('users')\n            .doc(firebase.auth().currentUser!.uid)\n            .update({ tasks: arr })\n            .then(() => setTasks(arr));\n    };\n\n    const formik = useFormik({\n        initialValues: {\n            task: '',\n        },\n        onSubmit,\n        validateOnChange: false,\n        validateOnBlur: true,\n        validationSchema,\n    });\n\n    const changeFastTasks = (val: string, bool: boolean) => {\n        let arr = [...fastTasks];\n        if (bool) arr.push(val);\n        else arr = arr.filter(v => v !== val);\n        firebase\n            .app()\n            .firestore()\n            .collection('users')\n            .doc(firebase.app().auth().currentUser!.uid)\n            .update({\n                fastTasks: arr,\n            })\n            .then(() => setFastTasks(arr));\n    };\n\n    useEffect(() => {\n        firebase\n            .app()\n            .firestore()\n            .collection('users')\n            .doc(firebase.auth().currentUser!.uid)\n            .onSnapshot(snapshot => {\n                setTasks(snapshot.get('tasks') || []);\n                setFastTasks(snapshot.get('fastTasks') || []);\n            });\n    }, []);\n\n    return (\n        <Container>\n            <ModalTitle>Deine Aktivitäten</ModalTitle>\n            <Table bordered>\n                <thead>\n                    <th>Name der Aktivität</th>\n                    <th>Als Schnell-Task benutzen</th>\n                </thead>\n\n                {tasks.map(val => (\n                    <tr key={val}>\n                        <td>{val}</td>\n                        <td\n                            className={\n                                'd-flex text-align-center align-items-center'\n                            }>\n                            <Form.Check\n                                type={'checkbox'}\n                                checked={fastTasks.includes(val)}\n                                onChange={e =>\n                                    changeFastTasks(val, e.target.checked)\n                                }\n                            />\n                        </td>\n                    </tr>\n                ))}\n            </Table>\n            <br />\n            <Form\n                onSubmit={e => {\n                    e.preventDefault();\n                    formik.handleSubmit(e);\n                }}>\n                <FormGroup>\n                    <ModalTitle>Neue Aktivität</ModalTitle>\n                    <br />\n                    <FormControl\n                        name={'task'}\n                        placeholder={'Neue Aktivität'}\n                        onChange={formik.handleChange}\n                        isInvalid={!!formik.errors.task}\n                        value={formik.values.task}\n                    />\n                    <Alert variant={'danger'} show={!!formik.errors.task}>\n                        {formik.errors.task}\n                    </Alert>\n                </FormGroup>\n                <br />\n                <Button type={'submit'}>Neue Aktivität erstellen</Button>\n            </Form>\n        </Container>\n    );\n};\n\nexport default ManageTasks;\n","import React, { useEffect, useState } from 'react';\nimport firebase from 'firebase/compat';\nimport User from '../User';\nimport { Button, Col, Container, Row, Table } from 'react-bootstrap';\n\ntype Filter = 'day' | 'week' | 'month' | 'year' | 'allTime';\n\nconst Statistics = () => {\n    const [filter, setFilter] = useState<Filter>('allTime');\n    const [activities, setActivities] = useState<\n        Array<{\n            name: string;\n            time: number;\n        }>\n    >([]);\n\n    useEffect(() => {\n        firebase\n            .firestore()\n            .collection('users')\n            .doc(firebase.auth().currentUser!.uid)\n            .onSnapshot(snapshot => {\n                const newUser = snapshot.data() as User;\n\n                setActivities(\n                    newUser.tasks.map(val => {\n                        const inTimeFrame = newUser.activities.filter(\n                            act =>\n                                act.start > getFilterLength(filter) &&\n                                act.finished\n                        );\n                        let time = inTimeFrame\n                            .filter(a => a.task === val)\n                            .reduce(\n                                (a, b) =>\n                                    a +\n                                    (b.finished! -\n                                        b.start -\n                                        b.pauses\n                                            .filter(val => val.finished)\n                                            .reduce(\n                                                (a, b) =>\n                                                    a + (b.finished! - b.start),\n                                                0\n                                            )),\n                                0\n                            );\n\n                        time += inTimeFrame.reduce(\n                            (a, b) =>\n                                a +\n                                b.pauses\n                                    .filter(\n                                        pause =>\n                                            pause.task === val && pause.finished\n                                    )\n                                    .reduce(\n                                        (acc, b) =>\n                                            acc + (b.finished! - b.start),\n                                        0\n                                    ),\n                            0\n                        );\n\n                        return {\n                            name: val,\n                            time,\n                        };\n                    })\n                );\n            });\n    }, [filter]);\n\n    return (\n        <Container>\n            <h1>Statistiken</h1>\n            <br />\n            <h4>Filter</h4>\n            <Row>\n                <Col>\n                    <Button onClick={() => setFilter('allTime')}>Gesamt</Button>\n                </Col>\n                <Col>\n                    <Button onClick={() => setFilter('year')}>Jahr</Button>\n                </Col>\n                <Col>\n                    <Button onClick={() => setFilter('month')}>Monat</Button>\n                </Col>\n                <Col>\n                    <Button onClick={() => setFilter('week')}>Woche</Button>\n                </Col>\n                <Col>\n                    <Button onClick={() => setFilter('day')}>Tag</Button>\n                </Col>\n            </Row>\n            <br />\n            <Row>\n                <p>\n                    Aktueller Filter: <b>{getFilterFormatted(filter)}</b>\n                </p>\n            </Row>\n            <Row>\n                <Table>\n                    <thead>\n                        <th>Name der Aktivität</th>\n                        <th>Verbrauchte Zeit</th>\n                    </thead>\n                    <tbody>\n                        {activities.map(val => (\n                            <tr>\n                                <td>{val.name}</td>\n                                <td>{formatTime(val.time)}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            </Row>\n        </Container>\n    );\n};\n\nconst getFilterLength = (filter: Filter): number => {\n    const filterLengths: { [val in Filter]: number } = {\n        day: new Date().setHours(0, 0, 0),\n        month: new Date().setMonth(new Date().getMonth(), 1),\n        year: new Date().setFullYear(new Date().getFullYear(), 1, 1),\n        allTime: 0,\n        week: getMonday(new Date()).getTime(),\n    };\n\n    return filterLengths[filter];\n};\n\nfunction getMonday(d: Date) {\n    const day = d.getDay();\n    const diff = d.getDate() - day + (day === 0 ? -6 : 1); // adjust when day is sunday\n    return new Date(d.setDate(diff));\n}\n\nconst format = {\n    allTime: 'Gesamt',\n    year: 'Jahr',\n    month: 'Monat',\n    week: 'Woche',\n    day: 'Tag',\n};\n\nconst getFilterFormatted = (filter: Filter) => format[filter];\n\nconst SECONDS_IN_MS = 1000;\nconst MINUTES_IN_MS = 60 * SECONDS_IN_MS;\nconst HOURS_IN_MS = 60 * MINUTES_IN_MS;\n\nconst formatTime = (time: number) =>\n    `${Math.floor(time / HOURS_IN_MS)} Stunden ${Math.floor(\n        (time % HOURS_IN_MS) / MINUTES_IN_MS\n    )} Minuten ${Math.floor((time % MINUTES_IN_MS) / SECONDS_IN_MS)} Sekunden`;\n\nexport default Statistics;\n","import React, { useEffect, useState } from 'react';\nimport { Container } from 'react-bootstrap';\nimport AppNavbar from './AppNavbar';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Switch from 'react-bootstrap/Switch';\nimport Login from './login/Login';\nimport firebase from 'firebase/compat';\nimport SignUp from './login/SignUp';\nimport TimeTracker from './mainsite/TimeTracker';\nimport ManageTasks from './mainsite/ManageTasks';\nimport Statistics from './mainsite/Statistics';\n\nif (firebase.apps.length === 0) {\n    firebase.initializeApp({\n        apiKey: 'AIzaSyCvz1ymHe_2OFpKD2F8593e3ITKl7xN0y4',\n        authDomain: 'time-tracker-5411c.firebaseapp.com',\n        projectId: 'time-tracker-5411c',\n        storageBucket: 'time-tracker-5411c.appspot.com',\n        messagingSenderId: '730497288216',\n        appId: '1:730497288216:web:806280737d0aff0163db6d',\n        measurementId: 'G-EQ7X4W13CH',\n    });\n}\n\nfunction App() {\n    const [currentUser, setCurrentUser] = useState<firebase.User | null>();\n\n    useEffect(() => {\n        firebase\n            .app()\n            .auth()\n            .onAuthStateChanged(user => setCurrentUser(user));\n    });\n    return (\n        <HashRouter>\n            <Container fluid>\n                <AppNavbar />\n                {!currentUser ? (\n                    <Switch>\n                        <Route path={'/signup'} component={SignUp} />\n                        <Route exact path={'/'} component={Login} />\n                    </Switch>\n                ) : (\n                    <Switch>\n                        <Route path={'/tasks'} component={ManageTasks} />\n                        <Route path={'/stats'} component={Statistics} />\n                        <Route exact path={'/'} component={TimeTracker} />\n                    </Switch>\n                )}\n            </Container>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}